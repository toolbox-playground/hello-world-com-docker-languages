name: NodeJS CD

on:
  push:
    paths-ignore:
      - 'CHANGELOG.md'
      - 'package.json'
      - 'package-lock.json'
    tags-ignore:
      - '*'   
  workflow_dispatch:  

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Dependencies
      working-directory: nodejs  # Ensure you are in the right directory
      run: npm install

    - name: Build Docker image
      run: |
        cd nodejs
        docker build -t gcr.io/toolbox-sandbox-388523/nodejs-ci-cd:1.0.${{ github.run_id }} .

    - name: Installing Google Cloud
      run: |
        apt-get update && apt-get install -y curl python3 python3.8-venv python3-dev python3-pip
        curl https://sdk.cloud.google.com | bash
        PATH=$PATH:/root/google-cloud-sdk/bin

    - name: Configure GCP
      working-directory: dotnet  # Ensure you are in the right directory
      run: |
          echo $GCP_JSON > gcp.json
          export GOOGLE_CREDENTIALS=$(cat gcp.json | jq -c )
          export GOOGLE_APPLICATION_CREDENTIALS=gcp.json
          gcloud auth activate-service-account pipeline-iac@toolbox-sandbox-388523.iam.gserviceaccount.com --key-file=gcp.json
          gcloud config set project toolbox-sandbox-388523
          gcloud auth configure-docker
          docker push gcr.io/toolbox-sandbox-388523/nodejs-ci-cd:1.0.${{ github.run_id }}
          gcloud run deploy nodejs-test --region=us-central1 --port=8080 --image=gcr.io/toolbox-sandbox-388523/nodejs-ci-cd:1.0.${{ github.run_id }} 
          gcloud run services add-iam-policy-binding nodejs-test --region=us-central1 --platform managed --member="allUsers" --role="roles/run.invoker"
      env:
        GCP_JSON: ${{ secrets.GCP_JSON }}

  versioning:
      name: versioning
      runs-on: ubuntu-latest
      needs: build
      steps:
        - name: Versioning
          run: |
            - name: Checkout
              uses: actions/checkout@v3
              with:
                token: ${{ secrets.ACTIONS_TOKEN }}

            - name: Install and Build
              run: |
                npm install

            - name: Configuring Git Account
              run: |
                git config --global user.email "pipelines@toolboxdevops.cloud"
                git config --global user.name "Toolbox Automation"

            - name: Check commit message for specific keywords
              run: |
                text=$(git log -1 --no-merges --pretty=%B)
                echo $text
                if [[ $text =~ (fix|patch) ]]; then
                  npm run release -- --release-as patch
                  echo "{{ Patching Versioning }}"
                elif [[ $text =~ (BREAKING\ CHANGE) ]]; then
                  npm run release -- --release-as patch
                  echo "{{ Major Versioning }}"
                elif [[ $text =~ (feat) ]]; then
                  echo "{{ Minor Versioning }}"
                  npm run release -- --release-as minor
                else
                  npm run release -- --release-as patch
                  echo {{ Default Patching Versioning }}
                fi
                git push --follow-tags origin main
